// <auto-generated />
using System;
using ClinicManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClinicManagement.Migrations
{
    [DbContext(typeof(ClinicDbContext))]
    [Migration("20241023154158_finalVersion")]
    partial class finalVersion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClinicManagement.Entities.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("Decimal(15,2)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Varchar(50)")
                        .HasColumnName("Cause Of Disease");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("tblAppointments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoctorId = 1,
                            PatientId = 1,
                            Price = 100m,
                            Reason = "Routine check-up",
                            State = "schedule",
                            Time = new DateTime(2024, 10, 24, 18, 41, 58, 632, DateTimeKind.Local).AddTicks(7351)
                        },
                        new
                        {
                            Id = 2,
                            DoctorId = 2,
                            PatientId = 2,
                            Price = 80m,
                            Reason = "Flu symptoms",
                            State = "completed",
                            Time = new DateTime(2024, 10, 22, 18, 41, 58, 632, DateTimeKind.Local).AddTicks(7386)
                        },
                        new
                        {
                            Id = 3,
                            DoctorId = 1,
                            PatientId = 3,
                            Price = 120m,
                            Reason = "Back pain",
                            State = "completed",
                            Time = new DateTime(2024, 10, 22, 18, 41, 58, 632, DateTimeKind.Local).AddTicks(7389)
                        },
                        new
                        {
                            Id = 4,
                            DoctorId = 3,
                            PatientId = 5,
                            Price = 200m,
                            Reason = "Dental check-up",
                            State = "schedule",
                            Time = new DateTime(2024, 10, 24, 18, 41, 58, 632, DateTimeKind.Local).AddTicks(7392)
                        },
                        new
                        {
                            Id = 5,
                            DoctorId = 2,
                            PatientId = 5,
                            Price = 90m,
                            Reason = "Skin rash",
                            State = "schedule",
                            Time = new DateTime(2024, 10, 28, 18, 41, 58, 632, DateTimeKind.Local).AddTicks(7394)
                        },
                        new
                        {
                            Id = 6,
                            DoctorId = 4,
                            PatientId = 6,
                            Price = 75m,
                            Reason = "Eye examination",
                            State = "completed",
                            Time = new DateTime(2024, 10, 20, 18, 41, 58, 632, DateTimeKind.Local).AddTicks(7398)
                        },
                        new
                        {
                            Id = 7,
                            DoctorId = 1,
                            PatientId = 7,
                            Price = 150m,
                            Reason = "Physical therapy",
                            State = "schedule",
                            Time = new DateTime(2024, 10, 25, 6, 41, 58, 632, DateTimeKind.Local).AddTicks(7401)
                        },
                        new
                        {
                            Id = 8,
                            DoctorId = 2,
                            PatientId = 8,
                            Price = 60m,
                            Reason = "Cold and cough",
                            State = "completed",
                            Time = new DateTime(2024, 10, 23, 6, 41, 58, 632, DateTimeKind.Local).AddTicks(7403)
                        },
                        new
                        {
                            Id = 9,
                            DoctorId = 3,
                            PatientId = 9,
                            Price = 110m,
                            Reason = "Annual check-up",
                            State = "completed",
                            Time = new DateTime(2024, 10, 23, 17, 26, 58, 632, DateTimeKind.Local).AddTicks(7405)
                        },
                        new
                        {
                            Id = 10,
                            DoctorId = 4,
                            PatientId = 10,
                            Price = 250m,
                            Reason = "Chest pain",
                            State = "schedule",
                            Time = new DateTime(2024, 10, 23, 19, 41, 58, 632, DateTimeKind.Local).AddTicks(7409)
                        },
                        new
                        {
                            Id = 11,
                            DoctorId = 1,
                            PatientId = 10,
                            Price = 85m,
                            Reason = "Allergy consultation",
                            State = "completed",
                            Time = new DateTime(2024, 10, 23, 17, 41, 58, 632, DateTimeKind.Local).AddTicks(7411)
                        },
                        new
                        {
                            Id = 12,
                            DoctorId = 2,
                            PatientId = 12,
                            Price = 95m,
                            Reason = "Wound dressing",
                            State = "schedule",
                            Time = new DateTime(2024, 10, 23, 20, 41, 58, 632, DateTimeKind.Local).AddTicks(7414)
                        },
                        new
                        {
                            Id = 13,
                            DoctorId = 3,
                            PatientId = 11,
                            Price = 70m,
                            Reason = "Consultation for headache",
                            State = "completed",
                            Time = new DateTime(2024, 10, 21, 21, 41, 58, 632, DateTimeKind.Local).AddTicks(7423)
                        },
                        new
                        {
                            Id = 14,
                            DoctorId = 4,
                            PatientId = 14,
                            Price = 120m,
                            Reason = "Pregnancy check-up",
                            State = "schedule",
                            Time = new DateTime(2024, 10, 23, 22, 11, 58, 632, DateTimeKind.Local).AddTicks(7426)
                        },
                        new
                        {
                            Id = 15,
                            DoctorId = 1,
                            PatientId = 12,
                            Price = 110m,
                            Reason = "Diabetes management",
                            State = "schedule",
                            Time = new DateTime(2024, 10, 24, 17, 41, 58, 632, DateTimeKind.Local).AddTicks(7428)
                        },
                        new
                        {
                            Id = 16,
                            DoctorId = 2,
                            PatientId = 10,
                            Price = 85m,
                            Reason = "Blood pressure check",
                            State = "completed",
                            Time = new DateTime(2024, 10, 23, 15, 11, 58, 632, DateTimeKind.Local).AddTicks(7430)
                        },
                        new
                        {
                            Id = 17,
                            DoctorId = 3,
                            PatientId = 11,
                            Price = 130m,
                            Reason = "Knee pain assessment",
                            State = "completed",
                            Time = new DateTime(2024, 10, 23, 21, 11, 58, 632, DateTimeKind.Local).AddTicks(7433)
                        });
                });

            modelBuilder.Entity("ClinicManagement.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Varchar(50)")
                        .HasColumnName("DepartmentName");

                    b.HasKey("Id");

                    b.ToTable("tblDepartment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeptName = "Cardiology"
                        },
                        new
                        {
                            Id = 2,
                            DeptName = "Dermatology"
                        },
                        new
                        {
                            Id = 3,
                            DeptName = "Orthopedics"
                        },
                        new
                        {
                            Id = 4,
                            DeptName = "Pediatrics"
                        },
                        new
                        {
                            Id = 5,
                            DeptName = "Neurology"
                        },
                        new
                        {
                            Id = 6,
                            DeptName = "Oncology"
                        },
                        new
                        {
                            Id = 7,
                            DeptName = "Radiology"
                        },
                        new
                        {
                            Id = 8,
                            DeptName = "Endocrimology"
                        });
                });

            modelBuilder.Entity("ClinicMangmentSystem.Entites.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("DeptId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("officeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeptId");

                    b.HasIndex("officeId")
                        .IsUnique()
                        .HasFilter("[officeId] IS NOT NULL");

                    b.ToTable("tblDoctor", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeptId = 1,
                            Email = "Ahmed.Tharwat@clinic.com",
                            Name = "Dr. Ahmed Tharwat",
                            Password = "YV56ZjRGQFd+aV4y",
                            Phone = "+201022812243",
                            officeId = 1
                        },
                        new
                        {
                            Id = 2,
                            DeptId = 2,
                            Email = "Esraa.Zaki@clinic.com",
                            Name = "Dr. Esraa Zaki",
                            Password = "QiMmVUtKMFchdTE0",
                            Phone = "+201155698835",
                            officeId = 2
                        },
                        new
                        {
                            Id = 3,
                            DeptId = 3,
                            Email = "Ahmed.Khaled@clinic.com",
                            Name = "Dr. Ahmed Khaled",
                            Password = "TV9vbXhANzVGYl5l",
                            Phone = "+201012345678",
                            officeId = 3
                        },
                        new
                        {
                            Id = 4,
                            DeptId = 4,
                            Email = "Fatima.Hassan@clinic.com",
                            Name = "Dr. Fatima Hassan",
                            Password = "b1FWdCQ2dX4mRG41",
                            Phone = "+201198765432",
                            officeId = 4
                        },
                        new
                        {
                            Id = 5,
                            DeptId = 5,
                            Email = "Mohamed.Ali@clinic.com",
                            Name = "Dr. Mohamed Ali",
                            Password = "cGR1Z15wYWVXbX4x",
                            Phone = "+201234567890"
                        },
                        new
                        {
                            Id = 6,
                            DeptId = 6,
                            Email = "Sara.Mohamed@clinic.com",
                            Name = "Dr. Sara Mohamed",
                            Password = "N2hkMn4hRChWTWIp",
                            Phone = "+201512345678"
                        },
                        new
                        {
                            Id = 7,
                            DeptId = 7,
                            Email = "Omar.Mostafa@clinic.com",
                            Name = "Dr. Omar Mostafa",
                            Password = "T1FBJWtfN1NqQW9R",
                            Phone = "+201146890012",
                            officeId = 5
                        },
                        new
                        {
                            Id = 8,
                            DeptId = 8,
                            Email = "Mohamed.AbdEl-Hameed@clinic.com",
                            Name = "Dr. Mohamed AdbEL-Hameed",
                            Password = "OVp3NChKZm4jZ1Bu",
                            Phone = "+201014501522",
                            officeId = 6
                        },
                        new
                        {
                            Id = 9,
                            DeptId = 4,
                            Email = "AhmedIssam@gmail.com",
                            Name = "Dr. Ahmed Issam",
                            Password = "NFUmJCZPKiVqOUpU",
                            Phone = "+201001626756"
                        },
                        new
                        {
                            Id = 10,
                            DeptId = 6,
                            Email = "MohamedTawfiq@gmail.com",
                            Name = "Dr. Mohamed Tawfiq",
                            Password = "TksoKGkxJnVpKCFk",
                            Phone = "+201557945331"
                        });
                });

            modelBuilder.Entity("ClinicMangmentSystem.Entites.Office", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("tblOffice", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "First-Floor",
                            Name = "Off11-A"
                        },
                        new
                        {
                            Id = 2,
                            Address = "First-Floor",
                            Name = "Off12-A"
                        },
                        new
                        {
                            Id = 3,
                            Address = "First-Floor",
                            Name = "Off13-A"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Second-Floor",
                            Name = "Off21-B"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Second-Floor",
                            Name = "Off22-B"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Second-Floor",
                            Name = "Off23-B"
                        });
                });

            modelBuilder.Entity("ClinicMangmentSystem.Entites.Patient", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblPatient", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cairo, Egypt",
                            Age = 28,
                            Name = "Ahmed Ali",
                            Phone = "+201011223344",
                            gender = "Male"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Alexandria, Egypt",
                            Age = 25,
                            Name = "Mona Hamed",
                            Phone = "+201022334455",
                            gender = "Female"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Giza, Egypt",
                            Age = 32,
                            Name = "Khaled Hassan",
                            Phone = "+201033445566",
                            gender = "Male"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Aswan, Egypt",
                            Age = 24,
                            Name = "Sara Ibrahim",
                            Phone = "+201244556677",
                            gender = "Female"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Luxor, Egypt",
                            Age = 30,
                            Name = "Mahmoud Farouk",
                            Phone = "+201055667788",
                            gender = "Male"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Mansoura, Egypt",
                            Age = 27,
                            Name = "Yasmine Khalil",
                            Phone = "+211066778899",
                            gender = "Female"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Port Said, Egypt",
                            Age = 35,
                            Name = "Omar Saeed",
                            Phone = "+201077889900",
                            gender = "Male"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Suez, Egypt",
                            Age = 29,
                            Name = "Aya Mostafa",
                            Phone = "+201588990011",
                            gender = "Female"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Ismailia, Egypt",
                            Age = 33,
                            Name = "Tamer Magdy",
                            Phone = "+201099001122",
                            gender = "Male"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Zagazig, Egypt",
                            Age = 26,
                            Name = "Nourhan Adel",
                            Phone = "+201511122233",
                            gender = "Female"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Fayoum, Egypt",
                            Age = 34,
                            Name = "Amr Reda",
                            Phone = "+201122233344",
                            gender = "Male"
                        },
                        new
                        {
                            Id = 12,
                            Address = "Beni Suef, Egypt",
                            Age = 28,
                            Name = "Rana Sameh",
                            Phone = "+201033344455",
                            gender = "Female"
                        },
                        new
                        {
                            Id = 13,
                            Address = "Minya, Egypt",
                            Age = 31,
                            Name = "Hossam Naguib",
                            Phone = "+201044455566",
                            gender = "Male"
                        },
                        new
                        {
                            Id = 14,
                            Address = "Assiut, Egypt",
                            Age = 23,
                            Name = "Mariam Fathi",
                            Phone = "+201255566677",
                            gender = "Female"
                        },
                        new
                        {
                            Id = 15,
                            Address = "Sohag, Egypt",
                            Age = 36,
                            Name = "Mostafa Amin",
                            Phone = "+201066677788",
                            gender = "Male"
                        });
                });

            modelBuilder.Entity("ClinicMangmentSystem.Entites.Prescription", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.Property<string>("Duration_of_treatment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("instructions")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("medicationName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("tblPrescreption", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DoctorId = 1,
                            Durationoftreatment = "7 days",
                            PatientId = 1,
                            instructions = "Take 1 tablet daily",
                            medicationName = "Aspirin"
                        },
                        new
                        {
                            Id = 2,
                            DoctorId = 2,
                            Durationoftreatment = "10 days",
                            PatientId = 1,
                            instructions = "Take 2 tablets daily",
                            medicationName = "Ibuprofen"
                        },
                        new
                        {
                            Id = 3,
                            DoctorId = 1,
                            Durationoftreatment = "5 days",
                            PatientId = 2,
                            instructions = "Take 1 capsule every 8 hours",
                            medicationName = "Amoxicillin"
                        },
                        new
                        {
                            Id = 4,
                            DoctorId = 4,
                            Durationoftreatment = "30 days",
                            PatientId = 3,
                            instructions = "Take 1 tablet daily",
                            medicationName = "Lisinopril"
                        },
                        new
                        {
                            Id = 5,
                            DoctorId = 2,
                            Durationoftreatment = "60 days",
                            PatientId = 4,
                            instructions = "Take 1 tablet twice daily",
                            medicationName = "Metformin"
                        },
                        new
                        {
                            Id = 6,
                            DoctorId = 6,
                            Durationoftreatment = "90 days",
                            PatientId = 5,
                            instructions = "Take 1 tablet daily",
                            medicationName = "Amlodipine"
                        },
                        new
                        {
                            Id = 7,
                            DoctorId = 8,
                            Durationoftreatment = "120 days",
                            PatientId = 5,
                            instructions = "Take 1 tablet at night",
                            medicationName = "Simvastatin"
                        },
                        new
                        {
                            Id = 8,
                            DoctorId = 6,
                            Durationoftreatment = "14 days",
                            PatientId = 6,
                            instructions = "Take 1 capsule daily before meals",
                            medicationName = "Omeprazole"
                        },
                        new
                        {
                            Id = 9,
                            DoctorId = 2,
                            Durationoftreatment = "180 days",
                            PatientId = 7,
                            instructions = "Take 1 tablet daily",
                            medicationName = "Atorvastatin"
                        },
                        new
                        {
                            Id = 10,
                            DoctorId = 8,
                            Durationoftreatment = "30 days",
                            PatientId = 8,
                            instructions = "Use inhaler as needed",
                            medicationName = "Albuterol"
                        },
                        new
                        {
                            Id = 11,
                            DoctorId = 3,
                            Durationoftreatment = "60 days",
                            PatientId = 9,
                            instructions = "Take 1 tablet daily",
                            medicationName = "Levothyroxine"
                        },
                        new
                        {
                            Id = 12,
                            DoctorId = 7,
                            Durationoftreatment = "90 days",
                            PatientId = 10,
                            instructions = "Take 1 tablet twice daily",
                            medicationName = "Metoprolol"
                        },
                        new
                        {
                            Id = 13,
                            DoctorId = 1,
                            Durationoftreatment = "120 days",
                            PatientId = 11,
                            instructions = "Take 1 tablet daily",
                            medicationName = "Losartan"
                        },
                        new
                        {
                            Id = 14,
                            DoctorId = 4,
                            Durationoftreatment = "60 days",
                            PatientId = 11,
                            instructions = "Take 1 capsule every 12 hours",
                            medicationName = "Gabapentin"
                        },
                        new
                        {
                            Id = 15,
                            DoctorId = 5,
                            Durationoftreatment = "30 days",
                            PatientId = 12,
                            instructions = "Take 1 tablet daily",
                            medicationName = "Furosemide"
                        },
                        new
                        {
                            Id = 16,
                            DoctorId = 1,
                            Durationoftreatment = "90 days",
                            PatientId = 12,
                            instructions = "Take 1 tablet daily",
                            medicationName = "Hydrochlorothiazide"
                        },
                        new
                        {
                            Id = 17,
                            DoctorId = 5,
                            Durationoftreatment = "120 days",
                            PatientId = 13,
                            instructions = "Take 1 tablet daily",
                            medicationName = "Citalopram"
                        },
                        new
                        {
                            Id = 18,
                            DoctorId = 3,
                            Durationoftreatment = "180 days",
                            PatientId = 13,
                            instructions = "Take 1 tablet daily",
                            medicationName = "Sertraline"
                        },
                        new
                        {
                            Id = 19,
                            DoctorId = 4,
                            Durationoftreatment = "30 days",
                            PatientId = 14,
                            instructions = "Take 1 tablet daily in the evening",
                            medicationName = "Montelukast"
                        },
                        new
                        {
                            Id = 20,
                            DoctorId = 5,
                            Durationoftreatment = "60 days",
                            PatientId = 15,
                            instructions = "Take 1 capsule daily",
                            medicationName = "Tamsulosin"
                        });
                });

            modelBuilder.Entity("ClinicMangmentSystem.Entites.SchedualeTime", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.ToTable("tblSchedualeTime", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Day = "Monday",
                            DoctorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Day = "Monday",
                            DoctorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Day = "Tuesday",
                            DoctorId = 2
                        },
                        new
                        {
                            Id = 4,
                            Day = "Tuesday",
                            DoctorId = 3
                        },
                        new
                        {
                            Id = 5,
                            Day = "Wednesday",
                            DoctorId = 4
                        },
                        new
                        {
                            Id = 6,
                            Day = "Wednesday",
                            DoctorId = 4
                        },
                        new
                        {
                            Id = 7,
                            Day = "Thursday",
                            DoctorId = 5
                        },
                        new
                        {
                            Id = 8,
                            Day = "Thursday",
                            DoctorId = 5
                        },
                        new
                        {
                            Id = 9,
                            Day = "Friday",
                            DoctorId = 6
                        },
                        new
                        {
                            Id = 10,
                            Day = "Friday",
                            DoctorId = 7
                        },
                        new
                        {
                            Id = 11,
                            Day = "Saturday",
                            DoctorId = 7
                        },
                        new
                        {
                            Id = 12,
                            Day = "Saturday",
                            DoctorId = 8
                        });
                });

            modelBuilder.Entity("ClinicManagement.Entities.Appointment", b =>
                {
                    b.HasOne("ClinicMangmentSystem.Entites.Doctor", "Doctor")
                        .WithMany("Appointments")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ClinicMangmentSystem.Entites.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ClinicMangmentSystem.Entites.Doctor", b =>
                {
                    b.HasOne("ClinicManagement.Entities.Department", "department")
                        .WithMany("Doctors")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicMangmentSystem.Entites.Office", "office")
                        .WithOne("Doctor")
                        .HasForeignKey("ClinicMangmentSystem.Entites.Doctor", "officeId");

                    b.Navigation("department");

                    b.Navigation("office");
                });

            modelBuilder.Entity("ClinicMangmentSystem.Entites.Prescription", b =>
                {
                    b.HasOne("ClinicMangmentSystem.Entites.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicMangmentSystem.Entites.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("ClinicMangmentSystem.Entites.SchedualeTime", b =>
                {
                    b.HasOne("ClinicMangmentSystem.Entites.Doctor", "Doctor")
                        .WithMany("SchedualeTimes")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ClinicMangmentSystem.Entites.TimeSlot", "TimeSlot", b1 =>
                        {
                            b1.Property<int>("SchedualeTimeId")
                                .HasColumnType("int");

                            b1.Property<TimeSpan>("EndAt")
                                .HasColumnType("Time")
                                .HasColumnName("EndTime");

                            b1.Property<TimeSpan>("StartAt")
                                .HasColumnType("Time")
                                .HasColumnName("StartTime");

                            b1.HasKey("SchedualeTimeId");

                            b1.ToTable("tblSchedualeTime");

                            b1.WithOwner("SchedualeTime")
                                .HasForeignKey("SchedualeTimeId");

                            b1.Navigation("SchedualeTime");

                            b1.HasData(
                                new
                                {
                                    SchedualeTimeId = 1,
                                    EndAt = new TimeSpan(0, 11, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 9, 0, 0, 0)
                                },
                                new
                                {
                                    SchedualeTimeId = 2,
                                    EndAt = new TimeSpan(0, 13, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 11, 0, 0, 0)
                                },
                                new
                                {
                                    SchedualeTimeId = 3,
                                    EndAt = new TimeSpan(0, 12, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 9, 0, 0, 0)
                                },
                                new
                                {
                                    SchedualeTimeId = 4,
                                    EndAt = new TimeSpan(0, 15, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 13, 0, 0, 0)
                                },
                                new
                                {
                                    SchedualeTimeId = 5,
                                    EndAt = new TimeSpan(0, 12, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 10, 0, 0, 0)
                                },
                                new
                                {
                                    SchedualeTimeId = 6,
                                    EndAt = new TimeSpan(0, 14, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 12, 0, 0, 0)
                                },
                                new
                                {
                                    SchedualeTimeId = 7,
                                    EndAt = new TimeSpan(0, 11, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 9, 0, 0, 0)
                                },
                                new
                                {
                                    SchedualeTimeId = 8,
                                    EndAt = new TimeSpan(0, 16, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 14, 0, 0, 0)
                                },
                                new
                                {
                                    SchedualeTimeId = 9,
                                    EndAt = new TimeSpan(0, 12, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 10, 0, 0, 0)
                                },
                                new
                                {
                                    SchedualeTimeId = 10,
                                    EndAt = new TimeSpan(0, 15, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 13, 0, 0, 0)
                                },
                                new
                                {
                                    SchedualeTimeId = 11,
                                    EndAt = new TimeSpan(0, 11, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 9, 0, 0, 0)
                                },
                                new
                                {
                                    SchedualeTimeId = 12,
                                    EndAt = new TimeSpan(0, 13, 0, 0, 0),
                                    StartAt = new TimeSpan(0, 11, 0, 0, 0)
                                });
                        });

                    b.Navigation("Doctor");

                    b.Navigation("TimeSlot")
                        .IsRequired();
                });

            modelBuilder.Entity("ClinicManagement.Entities.Department", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("ClinicMangmentSystem.Entites.Doctor", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Prescriptions");

                    b.Navigation("SchedualeTimes");
                });

            modelBuilder.Entity("ClinicMangmentSystem.Entites.Office", b =>
                {
                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("ClinicMangmentSystem.Entites.Patient", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("Prescriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
